[versions]
# Modules
moonlightapp-backend = '0.0.1'

# Spring plugins
springframework-boot = '3.4.2'
spring-dependency-management = '1.1.7'

# gRPC plugins
google-protobuf = '0.9.4'

# Spring Framework
springframework-cloud-spring-cloud-commons = '4.2.0'
springframework-cloud-spring-cloud-dependencies = '2024.0.0'
springframework-data-spring-data-jpa = '3.4.2'
springframework-security-spring-security-core = '6.4.2'

# Database
hibernate-orm-hibernate-core = '6.6.5.Final'

# Documentation
springdoc-opennapi = '2.6.0'

# gRPC
devh-grpc-spring-boot = '3.1.0.RELEASE'
google-protobuf-java = '4.29.3'
javax-annotation = '1.3.2'
grpc = '1.70.0'

# Utilities
commons-io = '2.17.0'
hibernate-jpamodelgen = '6.6.1.Final'
jjwt = '0.12.6'
lombok = '1.18.36'

[libraries]
# Modules
moonlightapp-backend-core = { module = 'ru.moonlightapp.backend:core', version.ref = 'moonlightapp-backend' }

# Spring Boot
springframework-spring-boot-starter-data-jpa = { module = 'org.springframework.boot:spring-boot-starter-data-jpa' }
springframework-spring-boot-starter-mail = { module = 'org.springframework.boot:spring-boot-starter-mail' }
springframework-spring-boot-starter-security = { module = 'org.springframework.boot:spring-boot-starter-security' }
springframework-spring-boot-starter-test = { module = 'org.springframework.boot:spring-boot-starter-test' }
springframework-spring-boot-starter-validation = { module = 'org.springframework.boot:spring-boot-starter-validation' }
springframework-spring-boot-starter-web = { module = 'org.springframework.boot:spring-boot-starter-web' }

# Spring Cloud
springframework-cloud-spring-cloud-commons = { module = 'org.springframework.cloud:spring-cloud-commons', version.ref = 'springframework-cloud-spring-cloud-commons'}
springframework-cloud-spring-cloud-starter-circuitbreaker = { module = 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j' }
springframework-cloud-spring-cloud-starter-gateway = { module = 'org.springframework.cloud:spring-cloud-starter-gateway' }
springframework-cloud-spring-cloud-starter-loadbalancer = { module = 'org.springframework.cloud:spring-cloud-starter-loadbalancer' }
springframework-cloud-spring-cloud-starter-netflix-eureka-server = { module = 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server' }
springframework-cloud-spring-cloud-starter-netflix-eureka-client = { module = 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client' }

# Spring Framework
springframework-data-spring-data-jpa = { module = 'org.springframework.data:spring-data-jpa', version.ref = 'springframework-data-spring-data-jpa' }
springframework-security-spring-security-core = { module = 'org.springframework.security:spring-security-core', version.ref = 'springframework-security-spring-security-core' }

# Database
h2database-h2 = { module = 'com.h2database:h2' }
hibernate-orm-hibernate-core = { module = 'org.hibernate.orm:hibernate-core', version.ref = 'hibernate-orm-hibernate-core' }
postgresql-postgresql = { module = 'org.postgresql:postgresql' }

# Documentation
springdoc-openapi = { module = 'org.springdoc:springdoc-openapi-starter-webmvc-ui', version.ref = 'springdoc-opennapi' }

# gRPC
devh-grpc-common-spring-boot = { module = 'net.devh:grpc-common-spring-boot', version.ref = 'devh-grpc-spring-boot' }
devh-grpc-client-spring-boot-starter = { module = 'net.devh:grpc-client-spring-boot-starter', version.ref = 'devh-grpc-spring-boot' }
devh-grpc-server-spring-boot-starter = { module = 'net.devh:grpc-server-spring-boot-starter', version.ref = 'devh-grpc-spring-boot' }
grpc-all = { module = 'io.grpc:grpc-all', version.ref = 'grpc' }
google-protobuf-java = { module = 'com.google.protobuf:protobuf-java', version.ref = 'google-protobuf-java' }
javax-annotation = { module = 'javax.annotation:javax.annotation-api', version.ref = 'javax-annotation' }

# Testing
junit-platform-junit-platform-launcher = { module = 'org.junit.platform:junit-platform-launcher' }

# Utilities
commons-io = { module = 'commons-io:commons-io', version.ref = 'commons-io' }
hibernate-jpamodelgen = { module = 'org.hibernate:hibernate-jpamodelgen', version.ref = 'hibernate-jpamodelgen' }
jjwt-impl = { module = 'io.jsonwebtoken:jjwt-impl', version.ref = 'jjwt' }
jjwt-jackson = { module = 'io.jsonwebtoken:jjwt-jackson', version.ref = 'jjwt' }
lombok = { module = 'org.projectlombok:lombok', version.ref = 'lombok' }

[plugins]
# Spring plugins
springframework-boot = { id = 'org.springframework.boot', version.ref = 'springframework-boot' }
spring-dependency-management = { id = 'io.spring.dependency-management', version.ref = 'spring-dependency-management' }

# gRPC plugins
google-protobuf = { id = 'com.google.protobuf', version.ref = 'google-protobuf' }